(Some) Product Owner Traits to Underscore:
•	Team Empowerment: Act in a way that brings about the best capabilities of the Scrum Team
  o	Celebration: Great work should be noticed, and celebrated with attention to the business value created and the team's self-organization to bring about the delivery.
  o	Accountability: A sprint/iteration commitment is important - otherwise it wouldn't be the highest priority items. Moreover, team members are adults who determine their own capacity for work and their own commitments. So when a team commits to work, the expectation should be to complete that work. If a commitment is not met, it should be noticed. Not ever to provide blame, but because to ignore an unmet commitment would implicitly imply it was not important from the get go. 
  o	Direction: A product owner should set the vision for how the team’s services will be used by the end users and how their work directly fits into, and is essential for, enterprise objectives. 
•	Trust: A Product Owner is responsible for telling a team WHAT is important and must trust a team to determine the best way HOW to accomplish it. Trust, when applied well, creates a dynamic that allows a team’s creativity to flourish. 
  o	Technically trusting: Honest conversations need to occur about Technical debt and other non-functional items critical to the product. Fear cannot be part of them. PO needs to trust team. Team needs to trust PO. This needs to be explicit.
  o	Trust in ‘self-decision making’: Product Owners must, at the end of the day, be decisive. They often arrive at their decisions through consensus interaction with others, but ultimately they – and only they – are accountable for key Product decisions. A product owner must trust herself enough to stand by her decisions and guide the development of the product.
•	Communication: Within software development, work is often abstract (as opposed to building a house, in which everything can be seen or touched.) Because it’s abstract, understanding the work requested, the work already built and other considerations can only occur through robust communication. Ineffective communication can doom an effort. 
  o	Able to Negotiate and Influence: Teams can only work on so much at a time, and the product owner must be able to negotiate application needs, end user needs, and stakeholder needs. Product Owners need to understand that work requests and needs are multi-threaded, but teams can only work single threaded, focusing on one thing (or a few things) at a time.  
•	Time Allocation: Allocating time for questions, questions, and their ideas for the ‘how’ are essential to a relationship with the tea, the end users, and 
  o	Participation with the team: Participation in Scrum ceremonies allows the time to be spent effectively and underscores their importance. A team with a closely participating Product Owner has a strong identity. Contrasting that, a team with a removed Product Owner lacks a direction
  o	End-User Focus: The development team can only be successful if the Product Owner is closely aware of uses, desires, motivations, and needs of the end user. The Product Owner must not only know this, but effectively communicate the understanding of the End User to the team.
  o	Stakeholder Engagement: Product Owners must also inform stakeholders of the progress, needs, hurdles, and accomplishments of the team. 
•	Others…?
 
Questions:
•	What, in your opinion, are the most important responsibilities of a Product Owner?

•	What is something that you know now, that you wish you knew during your first week?

•	How have you structured your time as a Product Owner? Are there rough time allocations that you have found to be effective between the end-user/team/stakeholder responsibilities?

•	 Describe a time when your team presented you with something technically complex that you were unable to see (for example, some sort of architectural refactoring) but affected the end-user, or timeline, of the application. How did the conversation go? What are some ways to have successful interactions with your team about issues/hurdles that are overly technical?

•	What Scrum ceremonies you found to be the most important? Why?

•	What are some of the unexpected hurdles/issues that you have experienced as a Product Owner?

•	Describe a time when there was an unexpected change in priorities within the team iteration. How did you handle it and what was the team outcome?

•	How would you interact with a team that consistently delivers valuable work, but never quite meet their iteration/Sprint commitments. 

